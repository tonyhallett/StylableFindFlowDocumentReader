<ToolBar x:Class="MS.Internal.Documents.FindToolBar" x:ClassModifier="internal"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:ui="clr-namespace:System.Windows.Documents"
         xmlns:MappingPIGen1="clr-namespace:System.Windows.Documents"
         xml:lang="en-US" x:Name="FindToolbar" x:Uid="FindToolbar" ToolBarTray.IsLocked="true"
         KeyboardNavigation.DirectionalNavigation="Continue" KeyboardNavigation.TabNavigation="Continue"
         FocusManager.IsFocusScope="false">
  <FrameworkElement.Resources>
    <SolidColorBrush x:Key="HasFocusBorderBrush" x:Uid="SolidColorBrush_1"
                     Color="{DynamicResource {x:Static JetSystemColors.ControlDarkColorKey}}"/>
    <LinearGradientBrush x:Key="HasFocusBrush" x:Uid="LinearGradientBrush_87" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStopCollection x:Uid="GradientStopCollection_72">
          <GradientStop x:Uid="GradientStop_155"
                        Color="{DynamicResource {x:Static JetSystemColors.ControlLightLightColorKey}}" Offset="0"/>
          <GradientStop x:Uid="GradientStop_154" Color="{DynamicResource {x:Static JetSystemColors.ControlLightColorKey}}"
                        Offset=".3"/>
          <GradientStop x:Uid="GradientStop_182" Color="{DynamicResource {x:Static JetSystemColors.ControlColorKey}}"
                        Offset=".85"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="IsPressedBrush" x:Uid="LinearGradientBrush_88" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStopCollection x:Uid="GradientStopCollection_87">
          <GradientStop x:Uid="GradientStop_183" Color="{DynamicResource {x:Static JetSystemColors.ControlLightColorKey}}"
                        Offset="0"/>
          <GradientStop x:Uid="GradientStop_184"
                        Color="{DynamicResource {x:Static JetSystemColors.ControlLightLightColorKey}}" Offset=".3"/>
          <GradientStop x:Uid="GradientStop_185" Color="{DynamicResource {x:Static JetSystemColors.ControlLightColorKey}}"
                        Offset=".85"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FillBrush" x:Uid="LinearGradientBrush_89" StartPoint="378.500000,0.000000"
                         EndPoint="378.500000,1.000000">
      <GradientBrush.GradientStops>
        <GradientStop x:Uid="GradientStop_186" Offset="0.005618" Color="#ff00cfff"/>
        <GradientStop x:Uid="GradientStop_187" Offset="0.511236" Color="#ff005fb5"/>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <Canvas x:Key="FindPreviousContent" x:Uid="Canvas_2" Width="6" Height="7">
      <Path x:Uid="Path_2" Data="F1 M 4,0 L 4,7 -2,3.818359 " Fill="{StaticResource FillBrush}"/>
    </Canvas>
    <Canvas x:Key="FindNextContent" x:Uid="Canvas_3" Width="6" Height="7">
      <Path x:Uid="Path_3" Data="F1 M -1,0 L -1,7 5,3.818359 " Fill="{StaticResource FillBrush}"/>
    </Canvas>
    <Style x:Uid="Style_5" TargetType="{x:Type ToolBar}">
      <Setter x:Uid="Setter_1" Property="Control.FontFamily"
              Value="{Binding Path=FontFamily, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Setter x:Uid="Setter_2" Property="Control.FontSize"
              Value="{Binding Path=FontSize, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Setter x:Uid="Setter_3" Property="Control.FontStyle"
              Value="{Binding Path=FontStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Setter x:Uid="Setter_4" Property="Control.FontWeight"
              Value="{Binding Path=FontWeight, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Setter x:Uid="Setter_6" Property="Control.Foreground"
              Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>
    <Style x:Uid="Style_18" TargetType="{x:Type Button}">
      <Setter x:Uid="Setter_742" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter x:Uid="Setter_772" Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
      <Setter x:Uid="Setter_743" Property="Control.BorderThickness" Value="0"/>
      <Setter x:Uid="Setter_128" Property="FrameworkElement.Width" Value="15"/>
      <Setter x:Uid="Setter_129" Property="FrameworkElement.Height" Value="18"/>
      <Setter x:Uid="Setter_773" Property="Control.Padding" Value="0"/>
      <Setter x:Uid="Setter_774" Property="FrameworkElement.Margin" Value="0"/>
      <Setter x:Uid="Setter_744" Property="Control.BorderBrush" Value="Transparent"/>
      <Setter x:Uid="Setter_745" Property="Control.Template">
        <Setter.Value>
          <ControlTemplate x:Uid="ControlTemplate_16" TargetType="{x:Type Button}">
            <Border x:Uid="Border_10" Background="Transparent" Margin="{TemplateBinding FrameworkElement.Margin}"
                    Padding="{TemplateBinding Control.Padding}">
              <Grid x:Uid="Grid_10" Width="{TemplateBinding FrameworkElement.Width}"
                    Height="{TemplateBinding FrameworkElement.Height}">
                <Border x:Name="TrimBorder" x:Uid="Border_11" BorderThickness="1" Background="Transparent">
                  <ContentPresenter x:Name="ButtonContent" x:Uid="ContentPresenter_1"/>
                </Border>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger x:Uid="Trigger_FTDisable" Property="UIElement.IsEnabled" Value="false">
                <Setter x:Uid="Setter_FTDisable" TargetName="ButtonContent" Property="UIElement.Opacity" Value="0.3"/>
              </Trigger>
              <Trigger x:Uid="Trigger_32" Property="UIElement.IsMouseOver" Value="true">
                <Setter x:Uid="Setter_756" TargetName="TrimBorder" Value="{StaticResource HasFocusBrush}"
                        Property="Border.Background"/>
                <Setter x:Uid="Setter_757" TargetName="TrimBorder" Value="{StaticResource HasFocusBorderBrush}"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger x:Uid="Trigger_33" Property="UIElement.IsKeyboardFocused" Value="true">
                <Setter x:Uid="Setter_758" TargetName="TrimBorder" Value="{StaticResource HasFocusBrush}"
                        Property="Border.Background"/>
                <Setter x:Uid="Setter_759" TargetName="TrimBorder" Value="{StaticResource HasFocusBorderBrush}"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <MultiTrigger x:Uid="MultiTrigger_7">
                <MultiTrigger.Conditions>
                  <Condition x:Uid="Condition_13" Property="UIElement.IsMouseOver" Value="true"/>
                  <Condition x:Uid="Condition_14" Property="UIElement.IsKeyboardFocused" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter x:Uid="Setter_760" TargetName="TrimBorder" Value="{StaticResource HasFocusBrush}"
                        Property="Border.Background"/>
                <Setter x:Uid="Setter_761" TargetName="TrimBorder" Value="{StaticResource HasFocusBorderBrush}"
                        Property="Border.BorderBrush"/>
              </MultiTrigger>
              <Trigger x:Uid="Trigger_34" Property="ButtonBase.IsPressed" Value="true">
                <Setter x:Uid="Setter_762" TargetName="TrimBorder" Value="{StaticResource IsPressedBrush}"
                        Property="Border.Background"/>
                <Setter x:Uid="Setter_763" TargetName="TrimBorder" Value="{StaticResource HasFocusBorderBrush}"
                        Property="Border.BorderBrush"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Uid="Style_4" TargetType="{x:Type Label}" BasedOn="{x:Null}">
      <Setter x:Uid="Setter_12" Property="Control.Padding" Value="0"/>
      <Setter x:Uid="Setter_20" Property="FrameworkElement.Margin" Value="3,0,0,0"/>
      <Setter x:Uid="Setter_130" Property="FrameworkElement.Width" Value="180"/>
      <Setter x:Uid="Setter_133" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter x:Uid="Setter_134" Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
      <Setter x:Uid="Setter_135" Property="Control.Background" Value="Transparent"/>
      <Setter x:Uid="Setter_136" Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"/>
    </Style>
    <Style x:Uid="Style_3" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
      <Setter x:Uid="Setter_11" Property="Control.BorderThickness" Value="0"/>
      <Setter x:Uid="Setter_138" Property="Control.BorderBrush" Value="Transparent"/>
      <Setter x:Uid="Setter_21" Property="Control.Padding" Value="0"/>
      <Setter x:Uid="Setter_22" Property="FrameworkElement.Margin" Value="0"/>
      <Setter x:Uid="Setter_131" Property="FrameworkElement.Width" Value="183"/>
      <Setter x:Uid="Setter_13" Property="UIElement.AllowDrop" Value="true"/>
      <Setter x:Uid="Setter_139" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter x:Uid="Setter_140" Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
      <Setter x:Uid="Setter_141" Property="Control.Background" Value="Transparent"/>
    </Style>
    <Style x:Key="OptionsMenuItemStyle" x:Uid="Style_716" TargetType="{x:Type MenuItem}">
      <Setter x:Uid="Setter_775" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter x:Uid="Setter_776" Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
      <Setter x:Uid="Setter_777" Property="Control.BorderThickness" Value="0"/>
      <Setter x:Uid="Setter_778" Property="FrameworkElement.Width" Value="15"/>
      <Setter x:Uid="Setter_779" Property="FrameworkElement.Height" Value="18"/>
      <Setter x:Uid="Setter_780" Property="FrameworkElement.Margin" Value="0,0,1,0"/>
      <Setter x:Uid="Setter_781" Property="Control.Padding" Value="0"/>
      <Setter x:Uid="Setter_782" Property="Control.BorderBrush" Value="Transparent"/>
      <Setter x:Uid="Setter_725" Property="Control.Template">
        <Setter.Value>
          <ControlTemplate x:Uid="ControlTemplate_26" TargetType="{x:Type MenuItem}">
            <Border x:Uid="Border_12" Background="Transparent" Margin="{TemplateBinding FrameworkElement.Margin}"
                    Padding="{TemplateBinding Control.Padding}">
              <Grid x:Uid="Grid_11" Width="{TemplateBinding FrameworkElement.Width}"
                    Height="{TemplateBinding FrameworkElement.Height}">
                <Border x:Name="TrimBorder" x:Uid="Border_13" BorderThickness="1" Background="Transparent">
                  <Canvas x:Uid="Canvas_1" Width="5" Height="4">
                    <Path x:Name="FindOptionsIcon" x:Uid="Path_4"
                          Fill="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"
                          Data="F1 M -2,0 L 5,0 1.5,4 "/>
                  </Canvas>
                </Border>
                <Popup x:Name="SubMenuPopup" x:Uid="Popup_1" AllowsTransparency="true" Placement="Bottom"
                       VerticalOffset="0" Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                  <Grid Name="SubMenu" x:Uid="SubMenu">
                    <Border Name="SubMenuBorder" x:Uid="SubMenuBorder"
                            Background="{DynamicResource {x:Static JetSystemColors.MenuBrushKey}}" BorderThickness="1"
                            BorderBrush="{DynamicResource {x:Static JetSystemColors.ControlDarkBrushKey}}"/>
                    <ScrollViewer x:Uid="ScrollViewer_1" Margin="1" CanContentScroll="true"
                                  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                      <ItemsPresenter x:Uid="ItemsPresenter_1" Margin="2" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </ScrollViewer>
                  </Grid>
                </Popup>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger x:Uid="Trigger_FTMDisable" Property="UIElement.IsEnabled" Value="false">
                <Setter x:Uid="Setter_FTMDisable" TargetName="FindOptionsIcon" Property="UIElement.Opacity" Value="0.3"/>
              </Trigger>
              <Trigger x:Uid="Trigger_35" Property="UIElement.IsMouseOver" Value="true">
                <Setter x:Uid="Setter_764" TargetName="TrimBorder" Value="{StaticResource HasFocusBrush}"
                        Property="Border.Background"/>
                <Setter x:Uid="Setter_765" TargetName="TrimBorder" Value="{StaticResource HasFocusBorderBrush}"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger x:Uid="Trigger_36" Property="UIElement.IsKeyboardFocused" Value="true">
                <Setter x:Uid="Setter_766" TargetName="TrimBorder" Value="{StaticResource HasFocusBrush}"
                        Property="Border.Background"/>
                <Setter x:Uid="Setter_767" TargetName="TrimBorder" Value="{StaticResource HasFocusBorderBrush}"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <MultiTrigger x:Uid="MultiTrigger_8">
                <MultiTrigger.Conditions>
                  <Condition x:Uid="Condition_15" Property="UIElement.IsMouseOver" Value="true"/>
                  <Condition x:Uid="Condition_16" Property="UIElement.IsKeyboardFocused" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter x:Uid="Setter_768" TargetName="TrimBorder" Value="{StaticResource HasFocusBrush}"
                        Property="Border.Background"/>
                <Setter x:Uid="Setter_769" TargetName="TrimBorder" Value="{StaticResource HasFocusBorderBrush}"
                        Property="Border.BorderBrush"/>
              </MultiTrigger>
              <Trigger x:Uid="Trigger_37" Property="MenuItem.IsPressed" Value="true">
                <Setter x:Uid="Setter_770" TargetName="TrimBorder" Value="{StaticResource IsPressedBrush}"
                        Property="Border.Background"/>
                <Setter x:Uid="Setter_771" TargetName="TrimBorder" Value="{StaticResource HasFocusBorderBrush}"
                        Property="Border.BorderBrush"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Border x:Name="FindTextBoxBorder" x:Uid="FindTextBoxBorder"
          BorderBrush="{DynamicResource {x:Static JetSystemColors.ControlDarkBrushKey}}"
          SnapsToDevicePixels="true" BorderThickness="1" Padding="0" Margin="5,1,0,1">
    <Border.Background>
      <LinearGradientBrush x:Uid="LinearGradientBrush_90" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
          <GradientStopCollection x:Uid="GradientStopCollection_88">
            <GradientStop x:Uid="GradientStop_188" Color="{DynamicResource {x:Static JetSystemColors.WindowColorKey}}"
                          Offset="0"/>
            <GradientStop x:Uid="GradientStop_189" x:Name="FindBorderGradientStop"
                          Color="{DynamicResource {x:Static JetSystemColors.WindowColorKey}}" Offset="0"/>
            <GradientStop x:Uid="GradientStop_190" Color="{DynamicResource {x:Static JetSystemColors.WindowColorKey}}"
                          Offset="1"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>
    </Border.Background>
    <FrameworkElement.Triggers>
      <EventTrigger x:Uid="EventTrigger_1" RoutedEvent="TextBox.GotFocus" SourceName="FindTextBox">
        <BeginStoryboard x:Uid="BeginStoryboard_1">
          <Storyboard x:Uid="Storyboard_1">
            <ColorAnimation x:Uid="ColorAnimation_1" Storyboard.TargetName="FindBorderGradientStop"
                            Storyboard.TargetProperty="Color"
                            From="{DynamicResource {x:Static JetSystemColors.WindowColorKey}}"
                            To="{DynamicResource {x:Static JetSystemColors.HighlightColorKey}}" Duration="0:0:0.6"
                            AutoReverse="true"/>
            <DoubleAnimation x:Uid="DoubleAnimation_1" Storyboard.TargetName="FindBorderGradientStop"
                             Storyboard.TargetProperty="Offset" From="0" To="1" Duration="0:0:0.6" AutoReverse="false"/>
          </Storyboard>
        </BeginStoryboard>
      </EventTrigger>
    </FrameworkElement.Triggers>
    <StackPanel x:Uid="FindStackPanel" Orientation="Horizontal">
      <Grid x:Name="FindTextBoxGrid" x:Uid="FindTextBoxGrid" VerticalAlignment="Center"
            Background="Transparent">
        <Label x:Name="FindTextLabel" x:Uid="FindTextLabel" FontStyle="Italic">
          Type text to find...
        </Label>
        <TextBox TextChanged="OnFindTextBoxChanged" PreviewKeyDown="OnFindTextBoxPreviewKeyDown"
                 x:Name="FindTextBox" x:Uid="FindTextBox" MaxLength="255"
                 ToolTip="Search for a word or phrase in this document." ToolTipService.ShowOnDisabled="true"/>
      </Grid>
      <Button Click="OnFindPreviousClick" x:Name="FindPreviousButton" x:Uid="FindPreviousButton"
              IsEnabled="false" ToolTip="Find Previous" ToolTipService.ShowOnDisabled="true"
              Content="{StaticResource FindPreviousContent}"/>
      <Button Click="OnFindNextClick" x:Name="FindNextButton" x:Uid="FindNextButton" IsEnabled="false"
              ToolTip="Find Next" ToolTipService.ShowOnDisabled="true" Content="{StaticResource FindNextContent}"/>
      <Menu x:Name="OptionsMenu" x:Uid="OptionsMenu" IsTabStop="false" IsMainMenu="false"
            VerticalAlignment="Center" Background="Transparent"
            KeyboardNavigation.DirectionalNavigation="Continue" KeyboardNavigation.TabNavigation="Continue">
        <MenuItem x:Name="OptionsMenuItem" x:Uid="OptionsMenuItem" Style="{StaticResource OptionsMenuItemStyle}"
                  IsTabStop="true" ToolTip="Find..." ToolTipService.ShowOnDisabled="true"
                  KeyboardNavigation.DirectionalNavigation="Continue" KeyboardNavigation.TabNavigation="Continue">
          <MenuItem x:Name="OptionsWholeWordMenuItem" x:Uid="OptionsWholeWordMenuItem" IsCheckable="true"
                    Header="Match _whole word only"/>
          <MenuItem x:Name="OptionsCaseMenuItem" x:Uid="OptionsCaseMenuItem" IsCheckable="true" Header="Match _case"/>
          <MenuItem x:Name="OptionsDiacriticMenuItem" x:Uid="OptionsDiacriticMenuItem" IsCheckable="true"
                    Header="Match _diacritic"/>
          <MenuItem x:Name="OptionsKashidaMenuItem" x:Uid="OptionsKashidaMenuItem" IsCheckable="true"
                    Header="Match _kashida"/>
          <MenuItem x:Name="OptionsAlefHamzaMenuItem" x:Uid="OptionsAlefHamzaMenuItem" IsCheckable="true"
                    Header="Match _alef hamza"/>
        </MenuItem>
      </Menu>
    </StackPanel>
  </Border>
</ToolBar>